Immutable objects

Immutable object - это объект, состояние которого после создания невозможно изменить.
В объектно-ориентированном программировании неизменяемые объекты создаются посредством соответствующего шаблона проектирования - «Неизменяемый интерфейс».
«Неизменяемый интерфейс» включает в себя определение типа, который не предоставляет никаких методов, которые могут изменить состояние.
Объекты, на которые ссылается этот тип, выглядят как неизменяемые.
В таких объектах как правило нет Set-ров и ко всем полям применяются модификаторы private и final.
При использовании immutable  объекта в разных частях программы лучше использовать его копию (в случае необходимости).
Потоко-безопасен. В случае многопоточного программирования, после создания объекты можно передавать другим потокам и они всегда будут в актуальном состоянии.
Из недостатков:
Возможно для экземпляров, на которые ссылается неизменяемый интерфейс, привести тип к конкретному изменяемому типу, и уже тогда изменить состояние.
Альтернативой неизменяемому интерфейсу является шаблон "неизменяемая обёртка".

public class Immutable {
    private final int x;
    private final int y;
    private final String description;

    public Immutable (int x, int y, String description) {
        this.x = x;
        this.y = y;
        this.description = description;
    }
}

http://www.javaworld.com/article/2074753/core-java/object-hacking-in-java---power-of-reflection.html
http://stackoverflow.com/questions/5124012/examples-of-immutable-classes
https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D1%8F%D0%B5%D0%BC%D1%8B%D0%B9_%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82
